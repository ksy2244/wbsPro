CREATE OR REPLACE VIEW wbsList
AS 
    SELECT p.prj_code prj, p.prj_name prjName, ep.user_name prjUserNmae, p.prjP prjP, p.prjComp prjComp,
    TRUNC(ABS((o.op_plan_start - SYSDATE) / (o.op_plan_end-o.op_plan_start))*100) ||'%' prjRes, -- 임의로 넣어놓음 (프로젝트 계획 진척율)
    s.sub_plan_end -  s.sub_plan_start prjPer, 
    s.prj_code subP, s.sub_date_code sub, s.sub_name subName, es.user_name subUserNmae,
    TRUNC(ABS((s.sub_plan_start - SYSDATE) / (s.sub_plan_end-s.sub_plan_start))*100) ||'%' subRes,
    s.sub_plan_end - s.sub_plan_start subPer,
    sub_comp subComp,
    c.sub_date_code catP, c.cat_date cat, c.cat_name catName, ec.user_name catUserNmae,
    TRUNC(ABS((c.cat_plan_start - SYSDATE) / (c.cat_plan_end-c.cat_plan_start))*100) ||'%' catRes,
    c.cat_plan_end -c.cat_plan_start catPer,
    c.cat_comp catComp,
    o.cat_date opP, o.op_date op, o.op_name opName, eo.user_name opUserNmae,
    TRUNC(ABS((o.op_plan_start - SYSDATE) / (o.op_plan_end-o.op_plan_start))*100) ||'%' opRes,
    o.op_plan_end -  o.op_plan_start opPer,
    o.work_comp opComp
FROM project p
LEFT OUTER JOIN procharge pc ON p.prj_code  = pc.prj_code
LEFT OUTER JOIN employee ep ON pc.user_code  = ep.user_code
LEFT OUTER JOIN subdate s ON p.prj_code = s.prj_code 
LEFT OUTER JOIN subcharge sc ON s.sub_date_code = sc.sub_date_code
LEFT OUTER JOIN employee es ON sc.user_code  = es.user_code
LEFT OUTER JOIN catdate c ON s.sub_date_code = c.sub_date_code 
LEFT OUTER JOIN catcharge cc ON c.cat_date = cc.cat_date 
LEFT OUTER JOIN employee ec ON cc.user_code  = ec.user_code
LEFT OUTER JOIN opdate o ON c.cat_date = o.cat_date
LEFT OUTER JOIN opcharge oc ON o.op_date = o.op_date
LEFT OUTER JOIN employee eo ON oc.user_code = eo.user_code;

commit;


CREATE OR REPLACE VIEW wbs 
AS
SELECT prj workCode, prjName workName, prjRes workRes , prjPer workPer, prjComp workComp, prjP PARENT, prjUserNmae workUser
FROM wbsList
UNION 
SELECT sub , subName , subRes , subPer , subComp, subP, subUserNmae  -- 대분류
FROM wbsList 
UNION
SELECT cat, catName , catRes, catPer , catComp, catP, catUserNmae -- 중분류
FROM wbsList
UNION 
SELECT op, opName , opRes, opPer , opComp, opP, opUserNmae -- 소분류
FROM wbsList;

commit;

SELECT workCode, LEVEL,  workPer, workName, workRes, workComp , workUser, parent
FROM wbs 
START WITH workCode = 1 
CONNECT BY prior workcode = parent;